@import 'bootstrap_overwrites';

// Margin utility classes
// Generates utility classes for margin and padding
//
// .m-t-10 => margin-top: 10px;
// .m-r-10 => margin-right: 10px;
// .m-b-10 => margin-bottom: 10px;
// .m-l-10 => margin-left: 10px;
// .p-t-10 => padding-top: 10px;
//
// .m-x-20 => margin-left: 20px; margin-right: 20px;
// .m-y-30 => margin-top: 30px; margin-bottom: 30px;
//
// .p-50 => padding: 50px;

// types:
$utility_types: (
  m: 'margin',
  p: 'padding'
);

// sides:
$utility_sides: (
  t: 'top',
  r: 'right',
  b: 'bottom',
  l: 'left'
);

// sizes:
$utility_withs: (
  0: 0,
  10: 10px,
  20: 20px,
  30: 30px,
  40: 40px,
  50: 50px,
  60: 60px,
  70: 70px,
  80: 80px
);

@each $type_key, $type_value in $utility_types {
  @each $width_key, $width_value in $utility_withs {

    .#{$type_key}-#{$width_key} {
      #{$type_value}: $width_value;
    }

    @each $side_key, $side_value in $utility_sides {

      @if $side_key == r or $side_key == l {
        .#{$type_key}-#{$side_key}-#{$width_key},
        .#{$type_key}-x-#{$width_key} {
          #{$type_value}-#{$side_value}: $width_value;
        }
      }

      @if $side_key == t or $side_key == b {
        .#{$type_key}-#{$side_key}-#{$width_key},
        .#{$type_key}-y-#{$width_key} {
          #{$type_value}-#{$side_value}: $width_value;
        }
      }

    }
  }
}

h1.small {
  font-size: floor(($font-size-base * 2.1))
}

h2.small {
  font-size: floor(($font-size-base * 1.8))
}

h3.small {
  font-size: floor(($font-size-base * 1.5))
}

h4.small {
  font-size: floor(($font-size-base * 1.4))
}

h5.small {
  font-size: floor(($font-size-base * 1.3))
}

@mixin a4 {
  background: $white;
  height: $a4-long-side;
  margin: 0;
  padding: 0;
  size: a4 portrait;
  width: $a4-short-side;
}

.text-bg-body {
  line-height: 1.5;
  min-height: 150px;
}

.fixed-width-xs {
  width: 250px;
}

.fixed-width-md {
  width: 400px;
}

.fixed-width-lg {
  width: 600px;
}

.float-right {
  float: right;
}
