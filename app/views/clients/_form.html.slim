= simple_error_notice f

- if policy(f.object).reactivate?
  h3.m-t-30= t('.reactivate.title')
  p== t('.reactivate.hint')
  = link_to t('.reactivate.button'), reactivate_client_path(f.object), class: 'btn btn-default m-t-10',
      data: { confirm: t('.reactivate.confirm') }
  hr.m-y-30
fieldset
  = show_status_date(@client, false, :created_at)

.row
  .col-xs-12.col-md-6
    fieldset
      legend= t_attr(:personal_particulars, Contact)
      = f.input :salutation, as: :select, collection: Client::SALUTATIONS, include_blank: true, input_html: { tabindex: 1 }
      = f.simple_fields_for :contact do |c|
        .row
          .col-xs-12.col-md-6
            = c.input :first_name, required: true, input_html: { tabindex: 2 }
            = f.input :birth_year, as: :select, collection: Client.year_collection,
              include_blank: true, input_html: { tabindex: 4 }
            = f.input :entry_date, input_html: { tabindex: 6 }
          .col-xs-12.col-md-6
            = c.input :last_name, required: true, label: t_attr(:last_name), input_html: { tabindex: 3 }
            = f.input :nationality, as: :country, input_html: { tabindex: 5 }
            = f.input :permit, collection: Client::PERMITS, as: :radio_buttons, input_html: { tabindex: 7 }

  = f.simple_fields_for :contact do |c|
    .col-xs-12.col-md-6
      = render 'contacts/address_fields', f: c, tabindex_start: 7
      = render 'contacts/phone_fields', f: c, tabindex_start: 10

fieldset
  legend Sprachkenntnisse
  .row
    .col-xs-12.col-md-6
      #languages
        = f.simple_fields_for :language_skills do |language|
          - if language.object.language == 'DE'
            .nested-fields
              h4 Deutsch
              = language.input :level, as: :radio_buttons, collection: LanguageSkill::LANGUAGE_LEVELS.without(:native_speaker)
              = language.hidden_field :language, value: 'DE'
              hr
          - else
            = render 'language_skills/fields', f: language, speaker: @client
    .col-xs-12.col-md-6
      .links
        = link_to_add_polymorphic_association 'Sprache hinzufügen', f, :language_skills, class: 'btn btn-default'
.row
  .col-xs-12.col-md-6
    = render 'relatives/form', f: f, relative: @client

  .col-xs-12.col-md-6
    fieldset
      legend Persönlicher Hintergrund
      = f.input :goals
      = f.input :education
      = f.input :actual_activities
      = f.input :interests

.row
  .col-xs-12.col-md-6
    fieldset
      legend Anforderungen an die/den Freiwillige/n
      = f.input :gender_request, collection: Client::GENDER_REQUESTS, default: :no_matter
      = f.input :age_request, collection: Client::AGE_REQUESTS, default: :age_no_matter
      = f.input :other_request

  .col-xs-12.col-md-6
    fieldset
      legend Interne Kriterien
      - if policy(@client).set_terminated?
        = acceptance_select(@client, f)
      - if policy(Client).superadmin_privileges?
        = f.association :involved_authority, collection: @social_workers, include_blank: true
        = f.association :user, collection: User.superadmins_and_social_workers.order_lastname,
                               include_blank: false,
                               label: 'Angemelded von'

      = f.input :competent_authority
      = f.input :other_authorities

.row
  .col-xs-12.col-md-6
    fieldset
      legend Verfügbarkeit?
      = render 'availability/form', f: f

.row
  .col-xs-12.col-md-6
    fieldset
      legend= t_attr(:cost_unit)
      = f.input :cost_unit, collection: Client.cost_unit_collection, include_blank: true, label_html: { class: 'sr-only' }

      h4 Hinweis
      p
        'Kosten in der Stadt Zürich: Vermittlung von Freiwilligen ist kostenlos.
        br
        'Kosten in Gemeinden: Die einmalige Vermittlungspauschale nach einer einmonatigen Probezeit beträgt:
        br
        'CHF 600 bei TransFair-Unterstützung der Tandems in der AOZ, Stadt Zürich
        br
        'CHF 800 bei TransFair-Unterstützung der Tandems vor Ort

  - if policy(Client).show_comments?
    .col-xs-12
      hr
    .col-xs-12.col-md-6
      = f.input :comments, input_html: { class: 'double-height' }, label: t_attr(:comments_internal)
    .col-xs-12.col-md-6
      = f.input :additional_comments, input_html: { class: 'double-height' }, label: t_attr(:additional_comments_internal)
