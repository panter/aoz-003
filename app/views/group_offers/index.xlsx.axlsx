wb = xlsx_package.workbook
wb.use_shared_strings = true

header_style = wb.styles.add_style(
  bg_color: 'FFDFDEDF',
  b: true,
  alignment: { horizontal: :center, vertical: :center },
  border: { color: '00', edges: [:bottom], style: :thin },
  width: :auto_fit
)

std_style = wb.styles.add_style alignment: { horizontal: :left, vertical: :top }, width: :auto_fit
wrapped_style = wb.styles.add_style alignment: { wrap_text: true, horizontal: :left, vertical: :top }
date_style = wb.styles.add_style format_code: 'dd.mm.yyyy', width: :auto_fit

wb.add_worksheet(name: t('group_offers', count: 2)) do |sheet|
  # Header row frozen (sticky)
  sheet.sheet_view.pane do |pane|
    pane.top_left_cell = 'A2'
    pane.state = :frozen_split
    pane.y_split = 1
    pane.x_split = 0
    pane.active_pane = :bottom_right
  end
  sheet.add_row(
    [
      'Status',                       # 00
      t_attr(:title),                 # 01
      t_attr(:group_offer_category),  # 02
      t_attr(:offer_type),            # 03
      t_attr(:department),            # 04
      t_attr(:location),              # 05
      t_attr(:availability),          # 06
      t_attr(:target_group),          # 07
      t_attr(:organization),          # 08
      t_attr(:duration),              # 09
      t_attr(:offer_state),           # 10
      'Verantwortliche/r',            # 11
      t_attr(:volunteers),            # 12
      t_attr(:created_at),            # 13
      t_attr(:period_end)             # 14
    ],
    style: header_style,
    height: 25
  )

  @group_offers.each do |offer|
    targets = if offer.all?
                t_attr(:all)
              else
                GroupOffer::TARGET_GROUP.select { |t| offer[t] }.map { |t| t_attr(t) }.join(",\r\n")
              end

    volunteers = offer.volunteers.map do |volunteer|
      role = t_attr(offer.responsible?(volunteer) ? :responsible : :member, GroupAssignment)
      "#{volunteer} (#{role}) #{volunteer.contact.primary_email}"
    end.compact

    sheet.add_row(
      [
        offer.active? ? 'Aktiv' : 'Inaktiv',                              # 00
        offer.title,                                                      # 01
        offer.group_offer_category,                                       # 02
        offer.offer_type? ? t("offer_type.#{offer.offer_type}") : nil,    # 03
        (offer.department if offer.internal?),                            # 04
        (offer.location if offer.external?),                              # 05
        availability_collection.select { |a| offer[a] }                   # 06
                               .map { |a| t("availability.#{a}") }
                               .join(",\r\n"),
        targets,                                                          # 07
        (offer.organization if offer.external?),                          # 08
        GroupOffer::DURATION.select { |d| offer[d] }                      # 09
                            .map { |d| t_attr(d) }
                            .join(",\r\n"),
        offer.offer_state? ? t("offer_state.#{offer.offer_state}") : nil, # 10
        offer&.creator,                                                   # 11
        volunteers.join("\r\n"),                                          # 12
        offer.created_at.to_date,                                         # 13
        offer.period_end&.to_date                                         # 14
      ],
      types: [
        :string,        # 00
        :string,        # 01
        :string,        # 02
        :string,        # 03
        :string,        # 04
        :string,        # 05
        :string,        # 06
        :string,        # 07
        :string,        # 08
        :string,        # 09
        :string,        # 10
        :string,        # 11
        :string,        # 12
        :date,          # 13
        :date           # 14
      ],
      style: [
        std_style,      # 00
        wrapped_style,  # 01
        wrapped_style,  # 02
        std_style,      # 03
        wrapped_style,  # 04
        wrapped_style,  # 05
        wrapped_style,  # 06
        wrapped_style,  # 07
        wrapped_style,  # 08
        wrapped_style,  # 09
        wrapped_style,  # 10
        wrapped_style,  # 11
        wrapped_style,  # 12
        date_style,     # 13
        date_style      # 14
      ]
    )
  end
  sheet.auto_filter = 'A1:O1'
end
