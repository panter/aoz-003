table.table.table-striped
  thead
    tr
      th= t_attr(:title)
      th= t_attr(:location)
      th= t_attr(:availability)
      th= t_attr(:target_group)
      th= t_attr(:offer_state)
      th= t_attr(:responsible)
      th= t_attr(:volunteers)
      th= t_attr(:group_offer_category)
      th colspan=(policy(GroupOffer).destroy? ? '5' : '4')

  tbody
    - group_offers.each do |offer|
      tr
        td= offer.title
        td
          - if offer.external? && offer.organization?
            = offer.organization
            br
            = offer.location
          - if !offer.external? && offer.department
            = offer.department.contact.last_name
        td
          - availability_collection.each do |availability|
            - if offer[availability]
              = t("availability.#{availability}")
              br
        td
          - if offer.all?
            = t_attr(:all)
          - else
            - GroupOffer::TARGET_GROUP.each do |target|
              - if offer[target]
                = t_attr(target)
                br
        td= t("offer_state.#{offer.offer_state}") if offer.offer_state?
        td
          - if offer.responsible
            - if offer.volunteer_responsible_state?
              = t("volunteer_responsible_state.#{offer.volunteer_responsible_state}")
              br
            = link_to offer.responsible, volunteer_path(offer.responsible)
        td
          - offer.volunteers.each do |volunteer|
            = link_to volunteer, volunteer_path(volunteer)
            br
        td= offer.group_offer_category.category_name
        td= link_to t_action(:show), group_offer_path(offer)
        td= link_to t('download'), group_offer_path(offer, format: :pdf)
        td= link_to t_action(:edit), edit_group_offer_path(offer)
        - if policy(GroupOffer).destroy?
          td= link_to t_action(:destroy), group_offer_path(offer), confirm_deleting(offer)
        td= link_to "#{ offer.active? ? t('.deactivate') : t('.activate') }",
          change_active_state_group_offer_path(offer), method: :put, remote: :true
