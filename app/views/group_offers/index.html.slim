h1= t_title

nav.navbar.section-navigation#filters
  hr
  ul.list-unstyled
    li.li-search-form
      = search_form_for @q do |f|
        = f.search_field :search_volunteer_cont, class: 'search-field',
          data: { autocomplete: search_group_offers_path }, autofocus: true,
          placeholder: 'Nach Freiwillige suchen'
        = f.submit 'Suchen', class: 'search-submit'
  ul.list-inline
    - if policy(GroupOffer).new?
      li= button_link t_title(:new), new_group_offer_path, dimension: 'sm'
    - if policy(GroupOfferCategory).index?
      li= button_link t('.group_offer_categories'), group_offer_categories_path, dimension: 'sm'
    li= button_link icon_span(:xlsx), url_for(format: :xlsx, q: search_parameters), dimension: 'sm'
    li= link_to icon_span(:print), url_for(print: :true, q: search_parameters), { class: 'btn btn-default btn-sm', target: '_blank' }
  hr
  ul.list-inline
    li= clear_filter_button
    = custom_filter_dropdown('Standort', *Department.filterable)
    = list_filter_dropdown(:offer_state, GroupOffer::OFFER_STATES)
    = custom_filter_dropdown('Kategorie', *GroupOfferCategory.filterable_group_offer)
    = custom_filter_dropdown('Einsatz',
      { q: :period_end_blank, text: 'Laufend', value: 'true'},
      { q: :period_end_set_by_id_not_null, text: 'Beendet', value: 'true'})
    = boolean_toggler_filter_dropdown(:active, 'Status', 'Aktiv', 'Inaktiv')
    = custom_filter_dropdown('Intern/Extern',
      { q: :offer_type_eq, text: 'Extern', value: 'external_offer'},
      { q: :offer_type_eq, text: 'Intern', value: 'internal_offer'})
    = button_link 'Beendete Einsätze',
      terminated_index_group_assignments_path, dimension: :sm
  hr

= bootstrap_paginate(@group_offers)

table.table.table-striped
  thead
    tr
      th.hidden-print Aktionen
      th= sort_link @q, :active, 'Status'
      th= t_attr(:title)
      th= sort_link @q, :location
      th Verantwortliche/r
      th= t_attr(:availability)
      th= t_attr(:target_group)
      th= t_attr(:duration)
      th= sort_link @q, :offer_state
      th= t_attr(:volunteers)
      th= sort_link @q, :group_offer_category_category_name, t_attr(:group_offer_category)
      th= sort_link @q, :offer_type, t_attr(:external, GroupOffer)
      th= sort_link @q, :created_at
      th= sort_link @q, :period_end

  tbody
    - @group_offers.each do |offer|
      tr
        td.index-action-cell.hidden-print
          = button_link icon_span(:show), group_offer_path(offer), title: 'Anzeigen/Freiwillige hinzufügen'
          - if policy(offer).edit?
            = button_link icon_span(:edit), edit_group_offer_path(offer), title: 'Bearbeiten'
        td.button-acceptance= assignment_status_badge(offer)
        td= offer.title
        td
          - if offer.external? && offer.organization?
            = offer.organization
            br
            = offer.location
          - if !offer.external? && offer.department
            = offer.department.contact.last_name
        td
          - if offer.creator
            =link_to offer.creator.full_name, profile_url_path(offer.creator)
        td
          - availability_collection.each do |availability|
            - if offer[availability]
              = t("availability.#{availability}")
              br
        td
          - if offer.all?
            = t_attr(:all)
          - else
            - GroupOffer::TARGET_GROUP.each do |target|
              - if offer[target]
                = t_attr(target)
                br
        td
          - GroupOffer::DURATION.each do |duration|
            - if offer[duration]
              = t_attr(duration)
              br
        td= t("offer_state.#{offer.offer_state}") if offer.offer_state?
        td
          - offer.volunteers.each do |volunteer|
            = link_to_if(policy(volunteer).edit?, volunteer.contact.full_name, edit_volunteer_path(volunteer))
            br
            = t_attr(offer.responsible?(volunteer) ? :responsible : :member, GroupAssignment)
            br
        td= link_to offer.group_offer_category.category_name, url_for(q: search_parameters.merge(group_offer_category_id_eq: offer.group_offer_category.id))
        td= t_attr(offer.external? ? :external : :internal, GroupOffer)
        td= l(offer.created_at.to_date) if offer.created_at?
        td= l(offer.period_end.to_date) if offer.period_end?

= bootstrap_paginate(@group_offers)

nav.navbar.section-navigation
  ul.list-inline
    - if policy(GroupOffer).new?
      li= button_link t_title(:new), new_group_offer_path, dimension: 'sm'
