table.table.table-striped.group-assignments-table
  thead
    tr
      th= t_attr(:title, GroupOffer)
      th= t_attr(:role, GroupAssignment)
      th= t_attr(:period_start, GroupAssignment)
      th= t_attr(:period_end, GroupAssignment)
      - if editable
        th colspan='4'
        - if policy(GroupOffer).edit?
          th= ' '
      - if policy(GroupOffer).destroy?
        th= ' '
      - if policy(GroupOffer).change_active_state?
        th= ' '
  tbody
    - group_assignments.each do |group_assignment|
      tr
        td= link_to group_assignment.group_offer.title, group_offer_path(group_assignment.group_offer)
        - if group_assignment.responsible
          td= t_attr(:responsible, GroupAssignment)
        - else
          td= t_attr(:member, GroupAssignment)
        td= l(group_assignment.period_start) if group_assignment.period_start
        td= l(group_assignment.period_end) if group_assignment.period_end
        td= link_to t_action(:show), group_offer_path(group_assignment.group_offer)
        td= link_to t('download'), group_offer_path(group_assignment.group_offer, format: :pdf)
        - if editable
          - if policy(GroupOffer).edit?
            td= link_to t_action(:edit), edit_group_offer_path(group_assignment.group_offer)
          - if policy(GroupOffer).destroy?
            td= link_to t_action(:destroy), group_offer_path(group_assignment.group_offer), confirm_deleting(group_assignment.group_offer)
          - if policy(GroupOffer).change_active_state?
            td= link_to "#{ group_assignment.group_offer.active? ? t('.deactivate') : t('.activate') }",
              change_active_state_group_offer_path(group_assignment.group_offer), method: :put, remote: :true
          td= link_to t_title(:new, Feedback), new_volunteer_feedback_path(@volunteer, feedbackable_type: 'GroupOffer', feedbackable_id: group_assignment.group_offer.id)
          td= link_to t_title(:index, Feedback), group_offer_feedbacks_path(group_assignment.group_offer)
