tr id=(dom_id(volunteer))
  - if action_index?
      td.index-action-cell.hidden-print
        = button_link icon_span(:show), volunteer, title: 'Anzeigen'
        - if policy(volunteer).edit?
          = button_link icon_span(:edit), edit_polymorphic_path(volunteer), title: 'Bearbeiten'
        - if policy(volunteer).destroy?
          = button_link icon_span(:delete), volunteer, nil,
              confirm_deleting(volunteer, 'btn btn-default').merge(title: 'Löschen')
        - if policy(volunteer).show?
          = button_link icon_span(:journal), volunteer_journals_path(volunteer), title: 'Journal'
  td
    - if controller_in?(:group_offers)
      = link_to 'Freiwillige/n hinzufügen',
          group_assignments_path(group_assignment: { group_offer_id: @group_offer.id, volunteer_id: volunteer.id }),
          class: 'btn btn-default', method: :post
    - elsif volunteer.seeking_clients?
      = button_link 'Klient/in suchen', find_client_volunteer_path(id: volunteer)
    - elsif volunteer.clients.any? && (volunteer.assignments.any? || volunteer.group_assignments.any?)
      = button_link t('.show_assignments'), volunteer_path(volunteer, anchor: 'assignments')
    - else
      = t('not_assignable')
  - if policy(Volunteer).show_acceptance?
    td.button-acceptance.index-action-cell
      = link_to t(".acceptance.#{volunteer.acceptance}"), '#',
        class: "btn btn-xs btn-acceptance-#{volunteer.acceptance}"
      - if volunteer.pending_invitation?
        br
        'Nie eingeloggt
      - if !volunteer.external && !volunteer.user
        br
        'Kein Login
        - if volunteer.import
          br
          'Importiert
  td.button-acceptance= assignment_status_badge(volunteer)
  td = t("salutation.#{volunteer.salutation}") if volunteer.salutation?
  - if action_in?(:index, :seeking_clients) || controller_in?(:group_offers)
    td = link_to_if policy(Volunteer).edit?, volunteer.contact.full_name, edit_volunteer_path(volunteer)
  td = volunteer.contact.city
  td = volunteer.contact.postal_code
  td = mail_to volunteer.contact.primary_email
  td = volunteer.birth_year.year if volunteer.birth_year?
  td.language-skill-index
    - [volunteer.native_language, volunteer.foreign_languages].flatten.each do |language|
      span= language.full_language_skills
  td = volunteer.education
  td = volunteer.profession
  td = "#{volunteer.working_percent}%" if volunteer.working_percent.present?
  td = volunteer.interests
  - if policy(Volunteer).show_comments?
    = td_truncate_content_modal(volunteer.comments, 'Bemerkungen')
  td = volunteer.external? ? t_attr(:external, Volunteer) : t_attr(:internal, Volunteer)
  td = l(volunteer.created_at.to_date)
