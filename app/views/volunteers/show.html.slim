h1= @volunteer.contact.full_name
- if @volunteer.rejected?
  - if @volunteer.rejection_type.present?
    h4= "#{t_attr(:rejection_type)}: #{t("rejection_type.#{@volunteer.rejection_type}")}"
  - if @volunteer.rejection_text.present?
    h4= "#{t_attr(:rejection_text)}: #{@volunteer.rejection_text}"

nav.navbar.section-navigation
  ul.list-inline.pull-right
    - if policy(Volunteer).superadmin_privileges?
        li= button_link 'Journal', polymorphic_path([@volunteer, Journal]), 'primary'
  ul.list-inline
    - if policy(@volunteer).terminate?
      li.button-acceptance = link_to t(".acceptance.#{@volunteer.acceptance}"), '#',
        class: "btn btn-acceptance-#{@volunteer.acceptance}"
      li= link_to 'Beenden', terminate_volunteer_path(@volunteer), class: 'btn btn-default', method: :put unless @volunteer.resigned?
    - if policy(Volunteer).superadmin_privileges?
      ul.list-inline
        - if @volunteer.seeking_clients?
          li= button_link t_title(:new, Assignment), new_assignment_path(volunteer_id: @volunteer)
        - if @volunteer.internal_and_started_assignments?
          li
            = simple_form_for [@volunteer, BillingExpense.new] do |f|
              = f.hidden_field :volunteer_id, value: @volunteer.id
              = f.button :submit
          - if @volunteer.billing_expenses.any?
            li= button_link t_title(:index, BillingExpense), volunteer_billing_expenses_path(@volunteer)
          li= button_link t('.new_certificate'), new_volunteer_certificate_path(@volunteer)
          - if @volunteer.certificates.size == 1
            li= button_link t('.show_certificate'), volunteer_certificate_path(@volunteer, @volunteer.certificates.first)
          - elsif @volunteer.certificates.size > 1
            li= button_link t('.show_certificates'), volunteer_certificates_path(@volunteer)
  ul.list-inline
    - if @volunteer.internal_and_started_assignments?
      li = button_link t('.report_hours'), new_volunteer_hour_url(@volunteer)
      li = button_link t('.hour_reports'), volunteer_hours_path(@volunteer)
    li= button_link current_user.volunteer? ? t('edit_profile') : t_title(:edit), edit_volunteer_path(@volunteer)
    li= form_navigation_btn :back, with_row: false unless current_user.volunteer?

- if policy(Volunteer).superadmin_privileges?
  - if @volunteer.import.present?
    = render 'import_account_invite', volunteer: @volunteer


  h2.small= t('checklist')
  .table-responsive
    table.table.table-no-border-top
      tbody
        tr
          td= t_attr(:trial_period)
          td= t(@volunteer.trial_period)
        tr
          td= t_attr(:intro_course)
          td= t(@volunteer.intro_course)
        tr
          td= t_attr(:doc_sent)
          td= t(@volunteer.doc_sent)
        tr
          td= t_attr(:bank_account)
          td= t(@volunteer.bank_account)
        tr
          td= t_attr(:evaluation)
          td= t(@volunteer.evaluation)

h2.small Pers√∂nlicher Hintergrund
.table-responsive
  table.table.table-no-border-top
    tbody
      tr
        td= t_attr(:salutation)
        td= t("salutation.#{@volunteer.salutation}") if @volunteer.salutation?
      = render 'contacts/show', contact: @volunteer.contact
      tr
        td= t_attr(:birth_year)
        td= @volunteer.birth_year.try(:year)
      tr
        td= t_attr(:avatar)
        td= image_tag @volunteer.avatar.url(:thumb) if @volunteer.avatar.present?
      tr
        td= t_attr(:nationality)
        td= nationality_name(@volunteer.nationality)
      tr
        td= t_attr(:additional_nationality)
        td= nationality_name(@volunteer.additional_nationality)

      = render 'language_skills/show', speaker: @volunteer

      tr
        td= t_attr(:profession)
        td= @volunteer.profession
      tr
        td= t_attr(:own_kids)
        td= @volunteer.own_kids
      tr
        td= t_attr(:education)
        td= @volunteer.education
      tr
        td= t_attr(:motivation)
        td= @volunteer.motivation
      tr
        td= t_attr(:experience)
        td
          dl.dl-horizontal
            dt= t(@volunteer.experience)
            dd= @volunteer.volunteer_experience_desc if @volunteer.volunteer_experience_desc?
      tr
        td= t_attr(:expectations)
        td= @volunteer.expectations
      tr
        td= t_attr(:strengths)
        td= @volunteer.strengths
      tr
        td= t_attr(:interests)
        td= @volunteer.interests
      - if @volunteer.internal?
        tr
          td= t_attr(:bank_details)
          td= @volunteer.full_bank_details
        tr
          td= t_attr(:waive)
          td= t(@volunteer.waive)

      tr
        td #{t_attr(:external)} / #{t_attr(:internal)}
        td= @volunteer.external? ? t_attr(:external) : t_attr(:internal)
      tr
        td= t_attr(:created_by)
        td
          - if @volunteer.self_applicant?
            = t('volunteer_self_applicant')
          - else
            = link_to @volunteer.registrar.full_name, profile_link(@volunteer.registrar)
      tr
        td= t_attr(:comments)
        td= @volunteer.comments
      tr
        td= t_attr(:additional_comments)
        td= @volunteer.additional_comments

h2.small= t_attr(:single_accompaniment)
.table-responsive
  table.table.table-striped
    thead
      tr
        - Volunteer::SINGLE_ACCOMPANIMENTS.each do |single|
          th.text-center= t_attr(single)
    tbody
      tr
        - @volunteer.slice(Volunteer::SINGLE_ACCOMPANIMENTS).values.each do |value|
          td.text-center= boolean_glyph(value)

.table-responsive
  table.table.table-striped
    thead
      tr
        - @volunteer.group_accompaniments_house_moving.each do |group|
          th.text-center
            = t_attr(group[:title])
    tbody
      tr
        - @volunteer.group_accompaniments_house_moving.each do |group|
          td.text-center= boolean_glyph(group[:value])

h2.small= t_attr(:group_accompaniment)
.table-responsive
  table.table.table-striped
    thead
      tr
        - @volunteer.group_accompaniments_active_without_house_moving.each do |group|
          th.text-center
            = t_attr(group[:title])
    tbody
      tr
        - @volunteer.group_accompaniments_active_without_house_moving.each do |group|
          td.text-center= boolean_glyph(group[:value])

      - if @volunteer.other_offer_desc?
        tr
          td= t_attr(:other_offer_desc)
          td= @volunteer.other_offer_desc

h2.small= t('.availability')
= render 'availability/show', available: @volunteer

- if @volunteer.assignments.unterminated.any?
  h2.small#assignments Aktuelle Begleitungen
  = render 'assignments/client_volunteer_index', assignments: @volunteer.assignments.unterminated

- if @volunteer.assignment_logs.any?
  h2.small Archivierte Begleitungen
  = render 'assignment_logs/assignment_logs_volunteer_index', assignment_logs: @volunteer.assignment_logs

- if @volunteer.group_assignments.unterminated.any?
  h2.small#assignments= t('.group_assignments')
  = render 'group_assignments/volunteer_group_assignments', group_assignments: @volunteer.group_assignments.unterminated, editable: true

- if @volunteer.group_assignment_logs.any?
  h2.small= t('.old_group_assignments')
  = render 'group_assignments/volunteer_group_assignments_logs', group_assignment_logs: @volunteer.group_assignment_logs

- if policy(Event).show? && @volunteer_events.present?
  = render 'events/volunteer_events', events: @volunteer_events

nav.navbar.section-navigation
  ul.list-inline
    li= button_link current_user.volunteer? ? t('edit_profile') : t_title(:edit), edit_volunteer_path(@volunteer)
    - if policy(Volunteer).index?
      li= form_navigation_btn :back, with_row: false
