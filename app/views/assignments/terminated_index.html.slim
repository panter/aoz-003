h1 Beendete Begleitungen

nav.navbar.section-navigation.hidden-print
  hr
  ul.list-inline
    li= button_link 'Alle Begleitungen', assignments_path, dimension: :sm
    li= button_link 'Filter aufheben',
      terminated_index_assignments_path(q: { termination_verified_by_id_null: 'true' }),
      dimension: :sm
    = custom_filter_dropdown('Ende Bestätigt',
      { q: :termination_submitted_by_id_not_null, text: 'Bestätigt', value: 'true' },
      { q: :termination_submitted_by_id_null, text: 'Unbestätigt', value: 'true' })
    - if policy(Assignment).verify_termination?
      = custom_filter_dropdown('Quittiert',
        { q: :termination_verified_by_id_not_null, text: 'Quittiert', value: 'true' },
        { q: :termination_verified_by_id_null, text: 'Unquittiert', value: 'true' })

.table-responsive
  table.table.table-striped
    thead
      tr
        th= sort_link @q, :volunteer_contact_last_name, 'Frewillige/r'
        th= sort_link @q, :client_contact_last_name, 'Klient/in'
        th= sort_link @q, :period_start, t_attr(:period_start, Assignment)
        th= sort_link @q, :period_end, t_attr(:period_end, Assignment)
        th Email Status
        th Bestätigt
        th colspan=(policy(Assignment).verify_termination? ? '3' : '2') Aktionen

    tbody
      - @assignments.each do |assignment|
        tr
          td= link_to assignment.volunteer.contact.full_name, volunteer_path(assignment.volunteer)
          td= link_to assignment.client.contact.full_name, client_path(assignment.client)
          td= l(assignment.period_start) if assignment.period_start
          td= l(assignment.period_end) if assignment.period_end
          td
            - if assignment.reminder_mailings.termination.blank?
              = link_to 'Beendigungs Email erstellen', new_termination_assignment_reminder_mailings_path(assignment), class: 'index-action-link'
            - elsif assignment.reminder_mailings.termination.first.sending_triggered
              = link_to "Übermittelt am #{l(assignment.reminder_mailings.termination.last.updated_at.to_date)}",
                reminder_mailing_path(assignment.reminder_mailings.termination.last), class: 'index-action-link'
            - else
              = link_to 'Nicht versandt', reminder_mailing_path(assignment.reminder_mailings.termination.last), class: 'index-action-link'
          td= boolean_glyph(assignment.termination_submitted_by.present?)
          td.index-action-cell
            = link_to 'Anzeigen', assignment_path(assignment), class: 'index-action-link'
            = link_to 'Bearbeiten', edit_assignment_path(assignment), class: 'index-action-link'
          td.index-action-cell
            = link_to 'Beendigungsformular', terminate_assignment_path(assignment), class: 'index-action-link'
            = link_to 'Dossier Freiwillig engagiert erstellen', new_volunteer_certificate_path(assignment.volunteer), class: 'index-action-link'
            = link_to 'Freiwillige/n beenden', '#', class: 'index-action-link'
            - if policy(Assignment).verify_termination?
              td
                = link_to_if(assignment.termination_verified_by.blank?, 'Beendigung Quittieren',
                  verify_termination_assignment_path(assignment), class: 'btn btn-default',
                  data: { method: 'PATCH' }) do
                    = "Quittiert von "
                    = link_to assignment.termination_verified_by.full_name, profile_link(assignment.termination_verified_by)
                    = " am #{l(assignment.termination_verified_at.to_date)}"
