h1= @volunteer.contact.full_name

= button_link icon_span(:back), volunteers_path

= render 'volunteers/show_excerpt', volunteer: @volunteer

.row
  .col-xs-6
    = render 'volunteers/single_accompaniments', volunteer: @volunteer
  .col-xs-6
    h3= t_attr(:availability, Volunteer)
    = render 'availability/show', available: @volunteer

h3= t('clients_need_accompanying')

nav.navbar.section-navigation
  ul.list-inline
    li= clear_filter_button
    li= render 'gender_request_select'
    li= render 'age_request_select'
    li= render 'language_skills_language_select'
    = boolean_filter_dropdown(:availability, Client::AVAILABILITY)

.table-responsive.table-scrollable
  table.table.table-striped
    thead
      tr
        th.hidden-print Aktionen
        - if policy(Client).superadmin_privileges?
          th= sort_link @q, :acceptance, t_attr(:acceptance, Client)
        th= sort_link @q, :active, 'Status'
        th= sort_link @q, :reserved_by, t_attr(:reserved_by, Client)
        th= sort_link @q, :salutation, t_attr(:salutation, Client)
        th= sort_link @q, :contact_last_name, t_attr(:full_name, Contact)
        th= sort_link @q, :contact_city, t_attr(:city, Contact)
        th= sort_link @q, :contact_postal_code, t_attr(:postal_code, Contact)
        th= sort_link @q, :birth_year, t_attr(:birth_year, Client)
        th= t_attr(:relatives, Client)
        th= sort_link @q, :nationality, t_attr(:nationality, Client)
        th= sort_link @q, :language_skills_language, t_attr(:language_skills, Client)
        th.truncate-th
          span= t_attr(:goals, Client)
        th= t_attr(:interests, Client)
        - if policy(Client).superadmin_privileges?
          th= t_attr(:involved_authority, Client)
        th.truncate-th
          span= sort_link @q, :competent_authority, t_attr(:competent_authority, Client)
        th.truncate-th
          span= sort_link @q, :other_authorities, t_attr(:other_authorities, Client)
        th.truncate-th
          span= sort_link @q, :created_at, t_attr(:created_at, Client)
        - if policy(Client).show_comments?
          th= t_attr(:comments, Client)
    tbody
      - @need_accompanying.each do |client|
        = render 'need_accompanying', client: client

= bootstrap_paginate(@need_accompanying)
