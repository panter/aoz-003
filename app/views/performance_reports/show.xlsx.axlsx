wb = xlsx_package.workbook

col_header = col_header = wb.styles.add_style(
  bg_color: 'FFDFDEDF',
  b: true,
  alignment: { horizontal: :center, vertical: :center },
  border: { color: '00', edges: [:bottom], style: :thin})

number_cell_style = wb.styles.add_style(alignment: { horizontal: :center }, width: :auto_fit)

wb.add_worksheet(name: 'Freiwillige') do |sheet|
  volunteers = @report_content['volunteers']
  column_order = ['zurich', 'not_zurich', 'internal', 'external', 'all']

  header_row = column_order.map do |category_key|
    t(".volunteers.categories.#{category_key}")
  end.unshift('')
  sheet.add_row header_row, style: col_header

  cell_types = Array.new(column_order.size).map { :integer }.unshift(:string)
  cell_styles = Array.new(column_order.size).map { number_cell_style }.unshift(nil)
  @value_orders[:volunteers].map { |order| order.is_a?(Array) ? order.first : order }.each do |row_key|
    row = [t("performance_reports.values_volunteers.#{row_key}")] +
      column_order.map { |col| volunteers[col][row_key.to_s] }
    sheet.add_row row, types: cell_types, style: cell_styles
  end
end

wb.add_worksheet(name: 'Klienten') do |sheet|
  clients = @report_content['clients']
  column_order = ['zurich', 'not_zurich', 'all']

  header_row = column_order.map do |category_key|
    t(".clients.categories.#{category_key}")
  end.unshift('')
  sheet.add_row header_row, style: col_header

  cell_types = Array.new(column_order.size).map { :integer }.unshift(:string)
  cell_styles = Array.new(column_order.size).map { number_cell_style }.unshift(nil)
  @value_orders[:clients].map { |order| order.is_a?(Array) ? order.first : order }.each do |row_key|
    row = [t("performance_reports.values_clients.#{row_key}")] +
      column_order.map { |col| clients[col][row_key.to_s] }
    sheet.add_row row, types: cell_types, style: cell_styles
  end
end

wb.add_worksheet(name: 'Begleitungen') do |sheet|
  assignments = @report_content['assignments']
  column_order = ['zurich', 'not_zurich', 'all']

  header_row = column_order.map do |category_key|
    t(".assignments.categories.#{category_key}")
  end.unshift('')
  sheet.add_row header_row, style: col_header

  cell_types = Array.new(column_order.size).map { :integer }.unshift(:string)
  cell_styles = Array.new(column_order.size).map { number_cell_style }.unshift(nil)
  @value_orders[:assignments].map { |order| order.is_a?(Array) ? order.first : order }.each do |row_key|
    row = [t("performance_reports.values_assignments.#{row_key}")] +
      column_order.map { |col| assignments[col][row_key.to_s] }
    sheet.add_row row, types: cell_types, style: cell_styles
  end
end

wb.add_worksheet(name: 'Gruppenangebote') do |sheet|
  group_offers = @report_content['group_offers']
  column_order = ['internal', 'external', 'all']

  header_row = column_order.map do |category_key|
    t(".group_offers.categories.#{category_key}")
  end.unshift('')
  sheet.add_row header_row, style: col_header

  cell_types = Array.new(column_order.size).map { :integer }.unshift(:string)
  cell_styles = Array.new(column_order.size).map { number_cell_style }.unshift(nil)
  row_keys = @value_orders[:group_offers_first].map { |order| order.is_a?(Array) ? order.first : order } +
    @value_orders[:group_offers_second].map { |order| order.is_a?(Array) ? order.first : order }
  row_keys.each do |row_key|
    row = [t("performance_reports.values_group_offers.#{row_key}")] +
      column_order.map { |col| group_offers[col][row_key.to_s] }
    sheet.add_row row, types: cell_types, style: cell_styles
  end
end
